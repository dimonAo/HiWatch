<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hiwatch.watch.dao.VersioninfoMapper" >
  <resultMap id="BaseResultMap" type="com.hiwatch.watch.pojo.Versioninfo" >
    <id column="version_id" property="versionId" jdbcType="INTEGER" />
    <result column="app_version" property="appVersion" jdbcType="VARCHAR" />
    <result column="down_load" property="downLoad" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hiwatch.watch.pojo.Versioninfo" extends="BaseResultMap" >
    <result column="funcation_cap" property="funcationCap" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    version_id, app_version, down_load, create_time
  </sql>
  <sql id="Blob_Column_List" >
    funcation_cap
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from version_info
    where version_id = #{versionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from version_info
    where version_id = #{versionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hiwatch.watch.pojo.Versioninfo" >
    insert into version_info (version_id, app_version, down_load, 
      create_time, funcation_cap)
    values (#{versionId,jdbcType=INTEGER}, #{appVersion,jdbcType=VARCHAR}, #{downLoad,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{funcationCap,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hiwatch.watch.pojo.Versioninfo" >
    insert into version_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        version_id,
      </if>
      <if test="appVersion != null" >
        app_version,
      </if>
      <if test="downLoad != null" >
        down_load,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="funcationCap != null" >
        funcation_cap,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        #{versionId,jdbcType=INTEGER},
      </if>
      <if test="appVersion != null" >
        #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="downLoad != null" >
        #{downLoad,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="funcationCap != null" >
        #{funcationCap,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hiwatch.watch.pojo.Versioninfo" >
    update version_info
    <set >
      <if test="appVersion != null" >
        app_version = #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="downLoad != null" >
        down_load = #{downLoad,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="funcationCap != null" >
        funcation_cap = #{funcationCap,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hiwatch.watch.pojo.Versioninfo" >
    update version_info
    set app_version = #{appVersion,jdbcType=VARCHAR},
      down_load = #{downLoad,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      funcation_cap = #{funcationCap,jdbcType=LONGVARCHAR}
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hiwatch.watch.pojo.Versioninfo" >
    update version_info
    set app_version = #{appVersion,jdbcType=VARCHAR},
      down_load = #{downLoad,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where version_id = #{versionId,jdbcType=INTEGER}
  </update>
</mapper>